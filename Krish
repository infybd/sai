Split 1:                                                                                                                                    Data Collection ‚Äì SMTP (E-commerce)
USER STORY ID: SMTP-01
Title: Collect Exception Logs from SMTP Service
As a Data Analyst
I want to collect exception logs from the SMTP service of the e-commerce application
So that I can analyze error occurrences across various modules
Acceptance Criteria:

SMTP logs collected from various components

Data includes timestamp, exception type, module, method, etc.

USER STORY ID: SMTP-02
Title: Structured Exception Data in JSON/XML
As a Data Analyst
I want to store exception data in JSON and XML formats
So that I can enable structured and flexible data ingestion
Acceptance Criteria:

JSON and XML files include defined fields (type, class, method, user, IP, timestamp)

üîπ Phase 2: Data Transformation ‚Äì SMTP Dataset
USER STORY ID: SMTP-03
Title: Flatten Nested JSON for Power BI
As a Data Analyst
I want to flatten the nested JSON data structure
So that I can load it into Power BI without schema issues
Acceptance Criteria:

Flattened JSON includes all relevant columns

USER STORY ID: SMTP-04
Title: Date-Time Field Transformation
As a Data Analyst
I want to convert date_time into separate Date, Time, and Weekday columns
So that I can perform more granular time-based trend analysis
Acceptance Criteria:

Date/Time fields are correctly parsed and formatted in Power BI

üîπ Phase 3: Dashboard Views by Role (SMTP Dataset)
üë®‚Äçüíª Developer Dashboard
USER STORY ID: DASH-DEV-01
Title: Identify Frequent Failures by Method and Type
As a Developer
I want to see which methods and exceptions occur most often
So that I can prioritize fixes
Acceptance Criteria:

Bar chart (Exceptions by Method)

Column chart (Exception Types Distribution)

Filterable exception log table

üß™ QA Dashboard
USER STORY ID: DASH-QA-01
Title: QA Focus on High-Exception Components
As a QA Engineer
I want to know which components and users face the most issues
So that I can target my testing
Acceptance Criteria:

Pie chart (Exceptions by Component)

Bar chart (Top Exception Types)

User Exception Frequency chart

üëë Team Lead Dashboard
USER STORY ID: DASH-LEAD-01
Title: Monitor Daily Trends and Component Load
As a Team Lead
I want to visualize trends and workload
So that I can allocate resources efficiently
Acceptance Criteria:

Line chart (Daily Exception Trend)

Stacked bar chart (Component-wise breakdown)

Date slicer for filtering

üìà Manager Dashboard
USER STORY ID: DASH-MGR-01
Title: Strategic Exception Overview
As a Project Manager
I want to view monthly patterns and system health
So that I can report to stakeholders
Acceptance Criteria:

Area chart (Monthly Exception Volume)

Matrix (Component vs Exception Type)

Summary KPI Cards (Total Exceptions, Components Affected, etc.)

üîπ Phase 4: Multi-Dataset Merging (SMTP + SQL + MongoDB + ANN + CNN)
USER STORY ID: MERGE-01
Title: Standardized Directory Setup
As a Data Analyst
I want to organize all source datasets using a common folder structure
So that data is accessible and easy to manage
Acceptance Criteria:

Directory structure established and shared with team

USER STORY ID: MERGE-02
Title: Consistent File Naming
As a Data Analyst
I want to rename datasets using a defined naming convention
So that files are identifiable by source
Acceptance Criteria:

All datasets named like MongoDB_Retail_2024.csv, etc.

USER STORY ID: MERGE-03
Title: Column Name and Type Standardization
As a Power BI Developer
I want to align column names and data types
So that I can merge datasets smoothly
Acceptance Criteria:

Standard schema used across datasets in Power BI

USER STORY ID: MERGE-04
Title: Clean and Merge Datasets
As a Power BI Developer
I want to remove nulls and join all cleaned datasets
So that I get a unified dataset for reporting
Acceptance Criteria:

Cleaned, merged, deduplicated dataset ready (MergedData2.csv)

üîπ Phase 5: Usability Enhancement
USER STORY ID: NAV-01
Title: Role-Based Navigation Panel
As a Dashboard User (Dev, QA, Lead, Manager)
I want to use a small toggle menu (‚ò∞) to switch between role-specific views
So that I can navigate without cluttering the dashboard
Acceptance Criteria:

Floating menu with buttons for each role

Page navigation works seamlessly
